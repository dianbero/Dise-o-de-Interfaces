<Page
    x:Class="_16_Commands._2_UI.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:_16_Commands._2_UI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:vm="using:_16_Commands._2_UI.ViewModels"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.DataContext>
        <vm:clsMainPageVM/>
    </Page.DataContext>
   
    <RelativePanel>
        <ListView Name="panelListView" ItemsSource="{Binding ListadoPersona}" SelectedItem="{Binding PersonaSeleccionada, Mode=TwoWay}">
            <!--RelativePanel.AlignBottomWithPanel="True" RelativePanel.AlignTopWithPanel="True"-->
            <ListView.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <TextBlock Text="{Binding Nombre, Mode=TwoWay}" Margin="5,0,0,0"></TextBlock>
                        <!--nombre de la lista que tenemos guardada-->
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>


        <!--Menú contextual para botón eliminar-->
        <AppBarButton Name="btnEliminar" Icon="Delete" Command="{Binding Eliminar}"  RelativePanel.Below="barraBuscar" RelativePanel.RightOf="panelListView">
            <!--Click="{Binding BtnEliminar_Click}"-->
            <!--<AppBarButton.Flyout>
                <Flyout>
                    <TextBlock Name="txtBotonEliminar" Text="Eliminar" Visibility="Collapsed"></TextBlock>
                </Flyout>
            </AppBarButton.Flyout>-->
        </AppBarButton>

        <!--Menú contextual botón eliminar-->
        <MenuFlyout>
            <MenuFlyoutItem Text="Eliminar" Icon="Delete" Command="{Binding Eliminar}"></MenuFlyoutItem>
        </MenuFlyout>

        <!--Barra de búsqueda-->
        <TextBox Name="barraBuscar" RelativePanel.RightOf="panelListView"></TextBox>
        <!--Botón de búsqueda-->
        <AppBarButton Name="btnBuscar" Icon="Find" RelativePanel.RightOf="barraBuscar" RelativePanel.AlignBottomWith="barraBuscar"></AppBarButton>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="hoverButton">
                <VisualState x:Name="txtEliminarHidden"></VisualState>
                <VisualState x:Name="txtEliminarShown">
                    <VisualState.Setters>
                        <Setter Target="txtBotonEliminar.Visibility" Value="Visible"></Setter>
                    </VisualState.Setters>
                </VisualState>                
            </VisualStateGroup>
            
        </VisualStateManager.VisualStateGroups>
        
        

        <!--esto no lo necesito para este ejercicio-->
        <!--<Grid Name="panelGridDatos" RelativePanel.RightOf="panelListView" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock Name="lblNombre" Text="Nombre: " Grid.Row="0" Grid.Column="0" Margin="5"></TextBlock>
            <TextBlock Name="lblApellido" Text="Apellidos: " Grid.Row="1" Grid.Column="0" Margin="5"></TextBlock>
            <TextBlock Name="lblFechaNacimiento" Text="Fecha de Nacimiento: " Grid.Row="2" Grid.Column="0" Margin="5"></TextBlock>

            <TextBox Name="txtNombre" Margin="10" Text="{x:Bind ViewModel.ListadoPersona, Mode=TwoWay}" Grid.Row="0" Grid.Column="1"></TextBox>
            <TextBox Name="txtApellido" Text="{Binding Path=PersonaSeleccionada.Apellido, Mode=TwoWay}" Grid.Row="1" Grid.Column="1"></TextBox>
            <TextBox Name="txtEdad" Text="{Binding Path=PersonaSeleccionada.Edad, Mode=TwoWay}" Grid.Row="2" Grid.Column="1"></TextBox>


            --><!--<TextBox Name="txtNombre" Margin="10" Text="{Binding Path=PersonaSeleccionada.Nombre, Mode=TwoWay}" Grid.Row="0" Grid.Column="1"></TextBox> -->
            <!--Se puede cambiar a Explicit-->
            <!--
            <TextBox Name="txtApellido" Text="{Binding Path=PersonaSeleccionada.Apellido, Mode=TwoWay}" Grid.Row="1" Grid.Column="1"></TextBox>
            <TextBox Name="txtEdad" Text="{Binding Path=PersonaSeleccionada.Edad, Mode=TwoWay}" Grid.Row="2" Grid.Column="1"></TextBox>--><!--

        </Grid>-->
        <!--esto no lo necesito para este ejercicio-->
        <!--<VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="formularioDebajo">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"></AdaptiveTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="grid.(RelativePanel.Below)" Value="panelListView"></Setter>
                        <Setter Target="grid.(RelativePanel.AlignBottomWithPanel)" Value="True"></Setter>
                        <Setter Target="grid.(RelativePanel.AlignLeftWith)" Value="panelListView"></Setter>
                        <Setter Target="grid.(RelativePanel.AlignRightWithPanel)" Value="True"></Setter>

                        <Setter Target="listview.(RelativePanel.AlignTopWithPanel)" Value="True"></Setter>
                        <Setter Target="listview.(RelativePanel.AlignLeftWithPanel)" Value="True"></Setter>
                        <Setter Target="listview.(RelativePanel.AlignRightWithPanel)" Value="True"></Setter>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="formularioDerecha">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="550"></AdaptiveTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="grid.(RelativePanel.RightOf)" Value="panelListView"></Setter>
                        <Setter Target="grid.(RelativePanel.AlignBottomWithPanel)" Value="True"></Setter>
                        <Setter Target="grid.(RelativePanel.AlignRightWithPanel)" Value="True"></Setter>
                        <Setter Target="grid.(RelativePanel.AlignTopWithPanel)" Value="True"></Setter>
                        <Setter Target="listview.(RelativePanel.AlignLeftWithPanel)" Value="True"></Setter>
                        <Setter Target="listview.(RelativePanel.AlignTopWithPanel)" Value="True"></Setter>
                        <Setter Target="listview.(RelativePanel.AlignBottomWithPanel)" Value="True"></Setter>
                        <Setter Target="listview.Width" Value="300"></Setter>
                        <Setter Target="listview.Margin" Value="0,20,20,20"></Setter>
                        <Setter Target="grid.Margin" Value="0,20,20,20"></Setter>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>-->
    </RelativePanel>
</Page>
